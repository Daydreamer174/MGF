name: install

on:
  push:
    tags:
      - "v*"
    branches:
      - "main"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  pull_request:
    branches:
      - "dev"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  meta:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.DAYDREAMER114_MGF_WORKFLOW }}
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      prerelease: ${{ steps.set_pre.outputs.prerelease }}
      is_release: ${{ steps.set_tag.outputs.is_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set tag
        id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          ${{ startsWith(github.ref, 'refs/pull/') && 'cd temp' || '' }}
          echo tag=$(git describe --tags --match "v*" ${{ github.ref }} || git rev-parse --short HEAD) | tee -a $GITHUB_OUTPUT
          exit ${PIPESTATUS[0]}

      - name: Judge pre-release
        id: set_pre
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          if [[ '${{ steps.set_tag.outputs.tag }}' =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo prerelease=false | tee -a $GITHUB_OUTPUT
          else
            echo prerelease=true | tee -a $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          this_tag=${{ steps.set_tag.outputs.tag }}
          if [[ '${{ steps.set_pre.outputs.prerelease }}' != 'false' ]]; then
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude='${{ steps.set_tag.outputs.tag }}')
          else
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude='${{ steps.set_tag.outputs.tag }}' --exclude='*-*')
          fi
          echo >> CHANGELOG.md
          echo "**Full Changelog**: [$last_tag -> $this_tag](https://github.com/Daydreamer174/MGF/compare/${last_tag}...${this_tag})" >> CHANGELOG.md

      - name: Upload changelog to Github
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          name: changelog
          path: CHANGELOG.md

  update:
    needs: meta
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: update
        shell: bash
        run: |
          mkdir -p ./update
          rsync -av --exclude='MaaCommonAssets' ./assets/ ./update/

      - uses: actions/upload-artifact@v4
        with:
          name: update
          path: "update"

  windows:
    needs: meta
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1
        with:
          repository: MaaXYZ/MaaFramework
          fileName: "MAA-win-${{ matrix.arch }}*"
          latest: true
          out-file-path: "deps"
          extract: true

      - name: Download MFAWPF
        uses: robinraju/release-downloader@v1
        with:
          repository: SweetSmellFox/MFAWPF
          filename: MFAWPF*
          latest: true
          out-file-path: MFA
          extract: true

      - name: Install
        shell: bash
        run: |
          python ./install.py ${{ needs.meta.outputs.tag }}
          cp ./MFA/MFAWPF.exe ./install
          # url项示例  https://github.com/SweetSmellFox/MFAWPF
          jq --arg version_name "MGF" --arg url ""https://github.com/SweetSmellFox/MFAWPF"" --arg version ${{ needs.meta.outputs.tag }} '. + {"name": $version_name, "url": $url,"version": $version}' ./assets/interface.json > ./install/interface.json

      - uses: actions/upload-artifact@v4
        with:
          name: MGF-win-${{ matrix.arch }}
          path: "install"

  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done
      - uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          files: assets/*
          prerelease: ${{ needs.meta.outputs.prerelease != 'false' }}
          tag_name: ${{ needs.meta.outputs.tag }}
